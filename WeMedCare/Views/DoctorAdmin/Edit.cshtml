@using System.Diagnostics.Eventing.Reader
@using System.Web.UI.WebControls
@model WeMedCare.Models.DoctorDetailsModel

@{
    //Layout = null;
}


<meta name="viewport" content="width=device-width" />
<title>Edit</title>
<style>
    .ll {
        margin-top: 50px;
    }

    .error {
        color: red;
    }
</style>
<body>
    <div class="container ll">
        <center>

            @if (ViewBag.Message != null)
            {
                <div class="warning" style="background-color: gray;" id="warningLabel">
                    <label>@ViewBag.Message</label>
                </div>
            }

        </center>
        <div class="row">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                @using (Html.BeginForm("Edit", "DoctorAdmin", FormMethod.Post, new { name = "myform", id = "myform", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()


                    <center>
                        <h1>Edit Doctor</h1><br />
                    </center>

                    @Html.ValidationSummary(true)

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.Degree, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Degree)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.Fees, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Fees, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fees)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.Schedule, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Schedule, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Schedule)
                        </div>
                    </div>

                    <div class="form-group row ">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.SpecialistId, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            <select name="SpecialistId" class="form-control">
                                <option value="">Select Specialist</option>
                                @foreach (var s in ViewBag.Specialist)
                                {
                                    <option value="@s.Id">@s.Specialist</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2 ", style = "font-size: 20px;" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Update" class="btn btn-default" style="background-color: #007bff; width: 150px; color: white" />
                        </div>
                    </div>

                }
            </div>
            <div class="col-md-2"></div>
        </div>
    </div>
    <center>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </center>

</body>
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $("#warningLabel").hide(1000).empty();
            }, 5000);
        });
        $("#myform").validate({
            rules: {
                Name: "required",
                Email: {
                    required: true,
                    email: true
                },
                Password: {
                    required: true,
                    minlength: 6
                },


                Degree: {
                    required: true

                },

                Fees: {
                    required: true,
                    number: true
                },
                Schedule: "required",
                SpecialistId: "required"

            },
            messages: {
                Name: "Please Enter Your Name",
                Email: {
                    required: "Please Enter your Email",
                    email: "Email is not correct"
                },
                Password: {
                    required: "Please Enter your Password",
                    minlength: "Minimum length is 6"
                },

                Fees: {
                    required: "Please Enter Fees",
                    number: "Fees should not contain cahracter"
                },
                Degree: {
                    required: "Please Enter your Degree"

                },

                Schedule: "Please Select Schedule",
                SpecialistId: "Please Select Category"

            }


        });
    </script>
}
